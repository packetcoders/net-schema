[tool.poetry]
name = "net-schema"
version = "0.1.1"
description = "Net Schema is a library that allows you to validate the schema of your YAML documents. For example your Ansible host vars or group vars."
homepage = "https://github.com/packetcoders/net-schema"
documentation = "https://github.com/packetcoders/net-schema"
authors = ["PacketCoders <contact@packetcoders.io>"]
readme = "README.md"
packages = [{include = "src"}]
keywords = ["jsonschema", "python"]
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.8",
]

[tool.poetry.scripts]
net-schema = "src.main:main"

[tool.poetry.dependencies]
python = "^3.8"
jsonschema = "^4.19.0"
rich = "^13.5.2"
referencing = "^0.30.2"
pyyaml = "^6.0.1"
typer = "^0.9.0"

[tool.poetry.dev-dependencies]
backcall = "0.2.0"
bandit = "1.7.1"
black = "21.9b0"
certifi = "2021.10.8"
charset-normalizer = "2.0.9"
click = "8.0.3"
colorama = "0.4.4"
commonmark = "0.9.1"
debugpy = "1.5.1"
decorator = "5.1.0"
entrypoints = "0.3"
eradicate = "2.0.0"
flake8 = "4.0.1"
flake8-builtins = "1.5.3"
flake8-eradicate = "1.2.0"
flake8-print = "4.0.0"
gitdb = "4.0.9"
GitPython = "3.1.24"
idna = "3.3"
ipykernel = "6.6.0"
ipython = "7.31.1"
jedi = "0.18.1"
matplotlib-inline = "0.1.3"
mccabe = "0.6.1"
mypy = "0.931"
mypy-extensions = "0.4.3"
nest-asyncio = "1.5.4"
parso = "0.8.3"
pathspec = "0.9.0"
pbr = "5.8.0"
pexpect = "4.8.0"
pickleshare = "0.7.5"
platformdirs = "2.4.0"
prompt-toolkit = "3.0.23"
ptyprocess = "0.7.0"
pycodestyle = "2.8.0"
pydocstyle = "6.1.1"
pyflakes = "2.4.0"
python-dateutil = "2.8.2"
regex = "2021.10.8"
requests = "2.26.0"
six = "1.16.0"
smmap = "5.0.0"
snowballstemmer = "2.2.0"
stevedore = "3.5.0"
toml = "0.10.2"
tomli = "1.2.1"
traitlets = "5.1.1"
urllib3 = "1.26.7"
wcwidth = "0.2.5"
yamllint = "1.26.3"
isort = "^5.10.1"
autoflake = "^1.4"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.1"
ruff = "^0.2.0"
types-pyyaml = "^6.0.12.12"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
exclude = "(.venv)"
line-length = 95

[tool.isort]
profile = "black"
skip = "venv, .venv"
balanced_wrapping = true
atomic = true

[tool.mypy]
exclude = ['venv', '.venv']
pretty = true
ignore_missing_imports = true

[tool.ruff]
line-length = 95
lint.select = [
    "B",       # "mypy"
    "D",       # "pydocstyle"
    "E",       # "pycodestyle"
    "F",       # "pyflakes"
    "I",       # "isort"
    "N",       # "flake8-string-format"
    "RUF100",  # "flake8-quotes"
    "S",       # "flake8-bandit"
    "T201",    # "flake8-print"
    "UP",      # "flake8-docstrings"
]
lint.ignore = [
    "B904", # Backoff must be used with a set of well-known exceptions
    "D401", # First line should be in imperative mood; try rephrasing
    "D406", # Section name should end with a newline
    "D100", # Missing docstring in public module
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start at the first line
    "E402", # Module level import not at top of file
    "E712", # Comparison to True should be 'if cond is True:' or 'if cond:'
    "S101", # Use of assert detected
    "UP007" # Unknown error code (might be specific to a particular plugin or extension)
]
