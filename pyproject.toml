[project]
name = "net-schema"
version = "0.1.1"
description = "Net Schema is a library that allows you to validate the schema of your YAML documents. For example your Ansible host vars or group vars."
authors = [{ name = "PacketCoders", email = "contact@packetcoders.io" }]
requires-python = "~=3.11"
readme = "README.md"
keywords = [
    "jsonschema",
    "python",
]
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "jsonschema>=4.19.0,<5",
    "rich>=13.9.4,<14",
    "referencing>=0.30.2,<0.31",
    "pyyaml>=6.0.1,<7",
    "typer>=0.9.4,<0.10",
    "isort>=6.0.1,<7",
    "jupyter-client>=8.6.3,<9",
]

[project.urls]
Homepage = "https://github.com/packetcoders/net-schema"
Documentation = "https://github.com/packetcoders/net-schema"

[project.scripts]
net-schema = "src.main:main"

[dependency-groups]
dev = [
    "autoflake==2.3.1",
    "bandit==1.8.3",
    "black==25.1.0",
    "certifi==2025.4.26",
    "charset-normalizer==3.4.2",
    "click==8.1.8",
    "colorama==0.4.6",
    "commonmark==0.9.1",
    "debugpy==1.8.14",
    "decorator==5.2.1",
    "entrypoints==0.4",
    "eradicate==2.3.0",
    "flake8==7.2.0",
    "flake8-builtins==2.5.0",
    "flake8-eradicate==1.5.0",
    "flake8-print==5.0.0",
    "gitdb==4.0.12",
    "GitPython==3.1.44",
    "idna==3.10",
    "ipykernel==6.29.5",
    "ipython==9.2.0",
    "jedi==0.19.2",
    "matplotlib-inline==0.1.7",
    "mccabe==0.7.0",
    "mypy==1.15.0",
    "mypy-extensions==1.1.0",
    "nest-asyncio==1.6.0",
    "parso==0.8.4",
    "pathspec==0.12.1",
    "pbr==6.1.1",
    "pexpect==4.9.0",
    "pickleshare==0.7.5",
    "platformdirs==4.3.7",
    "prompt-toolkit==3.0.51",
    "ptyprocess==0.7.0",
    "pycodestyle==2.13.0",
    "pydocstyle==6.3.0",
    "pyflakes==3.3.2",
    "pytest==8.3.5",
    "python-dateutil==2.9.0.post0",
    "regex==2024.11.6",
    "requests==2.32.3",
    "ruff==0.11.8",
    "six==1.17.0",
    "smmap==5.0.2",
    "snowballstemmer==2.2.0",
    "stevedore==5.4.1",
    "toml==0.10.2",
    "tomli==2.2.1",
    "traitlets==5.14.3",
    "types-pyyaml==6.0.12.12",
    "urllib3==2.4.0",
    "wcwidth==0.2.13",
    "yamllint==1.37.1",
    "isort==6.0.1",
]

[tool.hatch.build.targets.sdist]
include = ["src"]

[tool.hatch.build.targets.wheel]
include = ["src"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
exclude = "(.venv)"
line-length = 95

[tool.isort]
profile = "black"
skip = "venv, .venv"
balanced_wrapping = true
atomic = true

[tool.mypy]
exclude = ['venv', '.venv']
pretty = true
ignore_missing_imports = true

[tool.ruff]
line-length = 95
lint.select = [
    "B",       # "mypy"
    "D",       # "pydocstyle"
    "E",       # "pycodestyle"
    "F",       # "pyflakes"
    "I",       # "isort"
    "N",       # "flake8-string-format"
    "RUF100",  # "flake8-quotes"
    "S",       # "flake8-bandit"
    "T201",    # "flake8-print"
    "UP",      # "flake8-docstrings"
]
lint.ignore = [
    "B904", # Backoff must be used with a set of well-known exceptions
    "D401", # First line should be in imperative mood; try rephrasing
    "D406", # Section name should end with a newline
    "D100", # Missing docstring in public module
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start at the first line
    "E402", # Module level import not at top of file
    "E712", # Comparison to True should be 'if cond is True:' or 'if cond:'
    "S101", # Use of assert detected
    "UP007" # Unknown error code (might be specific to a particular plugin or extension)
]
